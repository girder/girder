---

  - name: logic flags | compute
    set_fact:
        do_install: >
            {{ state == "present" }}
        remove_repo: >
            {{ state == "absent" }}

  - name: git | install
    apt: name=git state=present update_cache=yes
    when: do_install|bool

  - name: variable prefix | set
    set_fact:
        real_variable_prefix: >
            {{ variable_prefix + "_" if variable_prefix else "" }}

  - name: hash | compute
    set_fact: git_hash={{ repo|hash("sha1") }}

  - name: paths | compute
    set_fact:
        git_repo_path: /repo/{{ git_hash }}/git
        git_work_path: /repo/{{ git_hash }}/work

  - name: repo path | probe
    stat:
        path: "{{ git_repo_path }}"
    register: repo_probe

  - name: repo path | flag | compute
    set_fact:
        do_link: >
            {{ (do_install|bool) and (not (repo_probe.stat.exists|bool)) }}

  - name: repo | delete
    file:
        path: "{{ item }}"
        state: absent
    with_items:
        - "{{ git_work_path }}"
        - "{{ git_repo_path }}"
    when: remove_repo|bool

  - name: repo | clone
    git:
        accept_hostkey: yes
        dest: "{{ git_work_path }}"
        key_file: "{{ key_file }}"
        repo: "{{ repo }}"
        version: "{{ version }}"
    when: do_install|bool

  - name: repo | git dir | relink
    shell: >
        mv "{{ git_work_path }}/.git" "{{ git_repo_path }}" &&
        ln -s "{{ git_repo_path }}" "{{ git_work_path }}/.git"
    when: do_link|bool

  - name: repo | version spec | probe
    shell: git describe --tags 2>/dev/null || echo untagged
    args:
        chdir: "{{ git_work_path }}"
    register: version_spec_probe
    when: do_install|bool

  - name: repo | output variables | set
    set_fact: >
        {{ real_variable_prefix }}git_hash="{{ git_hash }}"
        {{ real_variable_prefix }}git_repo_dir="{{ git_repo_path }}"
        {{ real_variable_prefix }}git_work_dir="{{ git_work_path }}"
        {{ real_variable_prefix }}git_version="{{ version_spec_probe.stdout }}"
    when: do_install|bool

