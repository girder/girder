---

  - name: nodejs | deps | install
    apt: name={{ item }} state=present update_cache=yes
    with_items:
      - apt-utils
      - build-essential
      - autoconf
      - libcppunit-dev
      - libtool
      - openssh-client
      - openssh-server
      - rsync
      - sudo
      - tar
      - gzip
      - wget
    when: do_install|bool

  - name: nodejs | install root | delete
    file:
        path: "{{ nodejs_install_root }}"
        state: absent
    when: remove_install_root|bool

  - name: nodejs | install parent | create
    file:
        path: "{{ nodejs_install_parent }}"
        state: directory
    when: do_install|bool

  - name: nodejs | source | dir | create
    file:
        path: "{{ nodejs_install_root }}/src"
        state: directory
    when: create_install_root|bool

  - name: nodejs | repo | sync
    command: >
        rsync -avz --exclude=.git
        "{{ nodejs_git_work_dir }}/"
        "{{ nodejs_install_root }}/src"
    when: create_install_root|bool

  - name: nodejs | build | configure
    shell: >
        ./configure "--prefix={{ nodejs_install_root }}"
    args:
        chdir: "{{ nodejs_install_root }}/src"
    when: do_compile|bool

  - name: nodejs | build | compile
    shell: make && make install
    args:
        chdir: "{{ nodejs_install_root }}/src"
    when: do_compile|bool

  - name: nodejs | binaries | rename
    shell: >
        mv "{{ item }}" "{{ item }}.real"
    args:
        chdir: "{{ nodejs_install_root }}/bin"
    with_items:
      - node
      - npm
    when: do_compile|bool

  - name: nodejs | env | script | generate
    template:
        src: setup-env.bash.j2
        dest: "{{ nodejs_install_root }}/setup-env.bash"
        mode: 0644
    when: do_compile|bool

  - name: nodejs | binaries | wrapper | generate
    template:
        src: "{{ item }}.j2"
        dest: "{{ nodejs_install_root }}/bin/{{ item }}"
        mode: 0755
    with_items:
      - node
      - npm
    when: do_compile|bool

