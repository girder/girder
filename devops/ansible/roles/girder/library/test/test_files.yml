- hosts: girder
  tasks:
    # Note: that the tasks until Item upload tests are tested in test_resources.yml.
    - name: Create 'admin' User
      girder:
        port: 8080
        user:
          firstName: "Chris"
          lastName: "Kotfila"
          login: "admin"
          password: "letmein"
          email: "chris.kotfila@kitware.com"
          admin: yes
        state: present

    - name: Create filesystem assetstore
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        assetstore:
          name: "Temp Filesystem Assetstore"
          type: "filesystem"
          root: "/tmp/"
          current: true
        state: present


    - name: Create collection for folder
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        collection:
          name: "Test Collection"
          description: "A test collection"
      register: test_collection


    - name: Create folder
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        folder:
          parentType: "collection"
          parentId: "{{test_collection['gc_return']['_id'] }}"
          name: "test folder"
          description: "A test folder"
      register: test_folder


    - name: Copy data/ folder to known location on VM
      copy:
        src: data/
        dest: /tmp/data/

    ############
    # Item upload tests
    #

    - name: Create an item
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        item:
          folderId: "{{test_folder['gc_return']['_id'] }}"
          name: "test item"
          description: "A test item"
      register: test_item


    - name: Upload files (should add test1.txt and test2.txt)
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        files:
          itemId: "{{ test_item['gc_return']['_id'] }}"
          sources:
            - /tmp/data/test1.txt
            - /tmp/data/test2.txt
      register: ret

    - assert:
        that:
          - ret['gc_return']['added']|length == 2
          - ret['gc_return']['removed']|length == 0

    - name: Upload files same files (should show no change)
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        files:
          itemId: "{{ test_item['gc_return']['_id'] }}"
          sources:
            - /tmp/data/test1.txt
            - /tmp/data/test2.txt
      register: ret

    - assert:
        that:
          - ret.changed == false
          - ret['gc_return']['added']|length == 0
          - ret['gc_return']['removed']|length == 0


    - name: Upload files (should remove test2.txt)
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        files:
          itemId: "{{ test_item['gc_return']['_id'] }}"
          sources:
            - /tmp/data/test1.txt
      register: ret

    - assert:
        that:
          - ret.changed
          - ret['gc_return']['added']|length == 0
          - ret['gc_return']['removed']|length == 1


    - name: Upload files (should add test3.txt)
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        files:
          itemId: "{{ test_item['gc_return']['_id'] }}"
          sources:
            - /tmp/data/test1.txt
            - /tmp/data/test3.txt
      register: ret

    - assert:
        that:
          - ret.changed
          - ret['gc_return']['added']|length == 1
          - ret['gc_return']['removed']|length == 0


    - name: Remove all files
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        files:
          itemId: "{{ test_item['gc_return']['_id'] }}"
        state: absent
      register: ret

    - assert:
        that:
          - ret.changed
          - ret['gc_return']['added']|length == 0
          - ret['gc_return']['removed']|length == 2


    # Remove assetstore
    - name: Remove filesystem assetstore
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        assetstore:
          name: "Temp Filesystem Assetstore"
          type: "filesystem"
          root: "/tmp/"
          current: true
        state: absent


    - name: Remove collection
      girder:
        port: 8080
        username: "admin"
        password: "letmein"
        collection:
          name: "Test Collection"
          description: "A test collection"
        state: absent
      register: test_collection
